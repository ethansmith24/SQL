/* Create table about the people and what they do here */


CREATE TABLE famous_people (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT, age INTEGER);

INSERT INTO famous_people (name, age) VALUES ("JK Rowling", 57);
INSERT INTO famous_people (name, age) VALUES ("Samuel L. Jackson", 74);
INSERT INTO famous_people (name, age) VALUES ("Elizabeth Olsen", 34);
INSERT INTO famous_people (name, age) VALUES ("Justin Bieber", 29);
INSERT INTO famous_people (name, age) VALUES ("Alicia Keys", 42);
INSERT INTO famous_people (name, age) VALUES ("George R. R. Martin", 74);
INSERT INTO famous_people (name, age) VALUES ("LaTanya Jackson", 73);
INSERT INTO famous_people (name, age) VALUES ("Robbie Arnett", 31);
INSERT INTO famous_people (name, age) VALUES ("Hailey Bieber", 26);
INSERT INTO famous_people (name, age) VALUES ("Swizz Beatz", 44);
INSERT INTO famous_people (name, age) VALUES ("John Legend", 44);
INSERT INTO famous_people (name, age) VALUES ("Emily Blunt", 40);
INSERT INTO famous_people (name, age) VALUES ("Dax Shepard", 48);
INSERT INTO famous_people (name, age) VALUES ("Chrissy Teigen", 37);
INSERT INTO famous_people (name, age) VALUES ("John Krasinski", 43);
INSERT INTO famous_people (name, age) VALUES ("Kristen Bell", 42);


CREATE TABLE financial_status (id INTEGER PRIMARY KEY AUTOINCREMENT, celeb_id INTEGER, occupation TEXT, net_worth INTEGER);

INSERT INTO financial_status (celeb_id, occupation, net_worth) VALUES (1, "author", 820);
INSERT INTO financial_status (celeb_id, occupation, net_worth) VALUES (2, "actor", 250);
INSERT INTO financial_status (celeb_id, occupation, net_worth) VALUES (3, "actor", 11);
INSERT INTO financial_status (celeb_id, occupation, net_worth) VALUES (4, "singer", 300);
INSERT INTO financial_status (celeb_id, occupation, net_worth) VALUES (5, "singer", 160);
INSERT INTO financial_status (celeb_id, occupation, net_worth) VALUES (6, "author", 120);
INSERT INTO financial_status (celeb_id, occupation, net_worth) VALUES (7, "actor", 10);
INSERT INTO financial_status (celeb_id, occupation, net_worth) VALUES (8, "singer", 5);
INSERT INTO financial_status (celeb_id, occupation, net_worth) VALUES (9, "model", 20);
INSERT INTO financial_status (celeb_id, occupation, net_worth) VALUES (10, "producer", 170);
INSERT INTO financial_status (celeb_id, occupation, net_worth) VALUES (11, "singer", 110);
INSERT INTO financial_status (celeb_id, occupation, net_worth) VALUES (12, "actor", 80);
INSERT INTO financial_status (celeb_id, occupation, net_worth) VALUES (13, "actor", 45);
INSERT INTO financial_status (celeb_id, occupation, net_worth) VALUES (14, "model", 75);
INSERT INTO financial_status (celeb_id, occupation, net_worth) VALUES (15, "actor", 80);
INSERT INTO financial_status (celeb_id, occupation, net_worth) VALUES (16, "actor", 45);


CREATE TABLE spouses (id INTEGER PRIMARY KEY AUTOINCREMENT, person1_id INTEGER, person2_id INTEGER);

INSERT INTO spouses (person1_id, person2_id) VALUES (2, 7);
INSERT INTO spouses (person1_id, person2_id) VALUES (3, 8);
INSERT INTO spouses (person1_id, person2_id) VALUES (4, 9);
INSERT INTO spouses (person1_id, person2_id) VALUES (5, 10);
INSERT INTO spouses (person1_id, person2_id) VALUES (11, 14);
INSERT INTO spouses (person1_id, person2_id) VALUES (12, 15);
INSERT INTO spouses (person1_id, person2_id) VALUES (13, 16);

/* Group each celebrity by their individual occupation */
SELECT fp.name, fs.occupation FROM famous_people fp
    JOIN financial_status fs
    ON fp.id = fs.celeb_id ORDER BY fs.occupation;

/* Which celebrities have a net worth greater than 150M and what is their corresponding occupation? */    
SELECT fp.name, fs.occupation, fs.net_worth AS "net worth (millions)" FROM famous_people fp
    JOIN financial_status fs
    ON fp.id = fs.celeb_id WHERE fs.net_worth > 150
    ORDER BY fs.net_worth asc;

/* Who are the top five wealthiest celebrities in order from greatest to least amount of wealth and their ages? */
SELECT fp.age, fp.name, fs.net_worth AS "net worth (millions)" FROM famous_people fp
    JOIN financial_status fs
    ON fp.id = fs.celeb_id 
    GROUP BY fp.name ORDER BY fs.net_worth desc LIMIT 5;
    
/* Group the celebrities in order of youngest to oldest with their corresponding wealth and occupations */
SELECT fp.age, fp.name, fs.net_worth AS "net worth (millions)", fs.occupation FROM famous_people fp
    JOIN financial_status fs
    ON fp.id = fs.celeb_id
    GROUP BY fp.name ORDER BY fp.age asc;

/* Which celebrities are married, who are their spouses and what are their corresponding ages? */    
SELECT fp1.name, fp1.age, fp2.name, fp2.age FROM spouses
    JOIN famous_people fp1
    ON fp1.id = spouses.person1_id
    JOIN famous_people fp2
    ON fp2.id = spouses.person2_id;

/* Sort the celebrities in order of least to greatest amount of wealth and their corresponding occupations */
SELECT fp.name, fs.net_worth AS "net worth (millions)", fs.occupation FROM famous_people fp
    JOIN financial_status fs
    ON fp.id = fs.celeb_id ORDER BY fs.net_worth asc;
    
/* Find the number of celebrities in each occupation, their corresponding total net worth and sort the results in order of the number of celebrities in each occupation from least to greatest. */    
SELECT fs.occupation, COUNT(*) AS "number of celebrities", SUM(fs.net_worth) AS "total net worth" FROM financial_status fs
    JOIN famous_people fp
    ON fs.celeb_id = fp.id
    GROUP BY occupation ORDER BY "number of celebrities";
    
    
    
